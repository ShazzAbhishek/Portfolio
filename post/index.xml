<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Abhishek Shastry</title>
    <link>https://shazzabhishek.github.io/Portfolio/post/</link>
    <description>Recent content in Projects on Abhishek Shastry</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate><atom:link href="https://shazzabhishek.github.io/Portfolio/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PROJECT I: TENSORFLOW OBJECT DETECTION</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-1/</guid>
      <description>TECH STACK: Python, tensflow model zoo, open cv2, Object-Detection api, Linux
 This model detects human hand symbol in real time The hand guesture images are collected through open cv2 and are labelled in a dictionary of items. The TR records are generated for individual task. TF records are a binary file format for storing data. Using a TF Records helps speed up training the object detection model.(annotations and images into a file format) TensorFlow 2 Detection Model Zoo lib is used as a pretrained model SSD Mobile v2 FPNLite 320*320 model is selected with speed and mean average precision of 22 and 22.</description>
    </item>
    
    <item>
      <title>PROJECT II: DATA PIPELINE(Kafka,Spark,Cassandra)</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-2/</guid>
      <description>TECH STACK: Java, Spring, maven, Kafka, apache spark, nosql, Sql, Html
 The goal is to analyse the customer behaviour like user clicks in an ecommerce based application For every 10 seconds the data is collected from Java based application to the kafka . The kafka producer and kafka consumer are integrated to the spring based maven backend. Parallelism is achieved as kafka topic into map. Kafka topic collects the data and is streamed down to spark server The spark server then streames line cassandra database.</description>
    </item>
    
    <item>
      <title>Project III: DATA PIPELINE AIRFLOW DOCKER</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-3/</guid>
      <description>TCEH STACK USED: Python, Airflow, Json, CSV, yml, Docker
 The data is extracted transformed and loaded through tweepy package. Messaging queue Airflow is used to orchestrate the workflow. Every day it will extract the data, and store it in csv files. Directed Acyclic Graph(DAG) is used to run tasks of works Docker takes care of building the process and starting the airflow server.  GitHub Link Repository</description>
    </item>
    
    <item>
      <title>PROJECT IV: DATABASE DESIGN</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-4/</guid>
      <description>TECH STACK: Java, JDBC, postgreSQL, java swing, Advance DB techniques
 This is a Design of DataBase PostgreSQL. First the requiremnts are given in words. The words are translated into the ER(Entity Relationship Diagram). Optimization are done: Based on weak entity, strong entity, normalization, lossless decomposition, Extraneous Attributes, schema combination and reduction. Keys: Foreign keys, composite keys, multivalued keys. Java Code is developed with front end containing Java Swing, backend: Java DataBase Connectivity.</description>
    </item>
    
    <item>
      <title>PROJECT V: FEATURE ENGINEERING ANALYSIS</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-5/</guid>
      <description>End to End implementation of feature engineering techniques Not all dataset require machine learning implementation to come with the analysis. Important feature engineering techniques:   select k best features for feature selection VarianceThreshold methods(dropping low and consatant variance) Mutual Information gain Chisquare Test For Feature Selection.  GitHub Link Repository</description>
    </item>
    
    <item>
      <title>PROJECT VI: NLP corpus classification</title>
      <link>https://shazzabhishek.github.io/Portfolio/post/chapter-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shazzabhishek.github.io/Portfolio/post/chapter-6/</guid>
      <description>TECHS STACK: Python, Pandas, NLP, ML algorithms: Random Forest, logistic regression, Decision Trees, Model evaluation
Motive: The goal is to predict the statements that would either support vaccination, lockdown, masking, and distancing or not. The whole project was divided into two segments. The first segment comprises of Calculating Kapa for 4 different users and then counting the one with maximum occurrences of true and false values. The second segment comprises predicting the unseen data.</description>
    </item>
    
  </channel>
</rss>
